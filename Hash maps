# Given two strings ransomNote and magazine, return true if ransomNote can be constructed by using the letters from magazine and false otherwise.
# Each letter in magazine can only be used once in ransomNote.

class Solution(object):
    def canConstruct(self, ransomNote, magazine):
        
        chars = {}

        for letter in magazine:
            if letter not in chars: chars[letter] = 1
            else: chars[letter] +=1
        
        for letter in ransomNote:
            if letter in chars and chars[letter]>0: chars[letter] -=1
            else: return False
        return True

# Given two strings s and t, determine if they are isomorphic.

class Solution:
    def isIsomorphic(self, s: str, t: str) -> bool:
        
        schars = {}
        siso = []
        a=1

        for letter in s:
            schars[letter] = a
            a+=1
        for letter in s:
            siso.append(schars.get(letter))
    
        tchars = {}
        tiso = []
        b=1

        for letter in t:
            tchars[letter] = b
            b+=1
        for letter in t:
            tiso.append(tchars.get(letter))
        
        if siso == tiso: return True
        else: return False
# different solution

class Solution:
    def isIsomorphic(self, s: str, t: str) -> bool:
        
        map1 = []
        map2 = []
        for letter in s:
            map1.append(s.index(letter))
        for letter in t:
            map2.append(t.index(letter))
        
        if map1==map2: return True
        else: return False
